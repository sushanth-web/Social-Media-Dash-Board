/* ## Colors

### Primary

- Lime Green: hsl(163, 72%, 41%)
- Bright Red: hsl(356, 69%, 56%)

- Facebook: hsl(208, 92%, 53%)
- Twitter: hsl(203, 89%, 53%)
- Instagram: linear gradient hsl(37, 97%, 70%) to hsl(329, 70%, 58%)
- YouTube: hsl(348, 97%, 39%)

#### Dark Theme

- Toggle: linear gradient hsl(210, 78%, 56%) to hsl(146, 68%, 55%)

#### Light Theme

- Toggle: hsl(230, 22%, 74%)

### Neutral

#### Dark Theme

- Very Dark Blue (BG): hsl(230, 17%, 14%)
- Very Dark Blue (Top BG Pattern): hsl(232, 19%, 15%)
- Dark Desaturated Blue (Card BG): hsl(228, 28%, 20%)
- Desaturated Blue (Text): hsl(228, 34%, 66%)
- White (Text): hsl(0, 0%, 100%)

#### Light Theme

- White (BG): hsl(0, 0%, 100%)
- Very Pale Blue (Top BG Pattern): hsl(225, 100%, 98%)
- Light Grayish Blue (Card BG): hsl(227, 47%, 96%)
- Dark Grayish Blue (Text): hsl(228, 12%, 44%)
- Very Dark Blue (Text): hsl(230, 17%, 14%) */
:root {
  --limegreen: hsl(163, 72%, 41%);
  --brightred: hsl(356, 69%, 56%);
  --facebook: hsl(208, 92%, 53%);
  --twitter: hsl(203, 89%, 53%);
  --instagram-start:hsl(37, 97%, 70%);
  --instagram-end:hsl(329, 70%, 58%);
  --youTube: hsl(348, 97%, 39%);
  --toggle-bg-start:hsl(210, 78%, 56%);
  --toggle-bg-end:hsl(146, 68%, 55%);
  --toggle: hsl(230, 22%, 74%);
  --dark-bg: hsl(230, 17%, 14%);
  --dark-top: hsl(232, 19%, 15%);
  --dark-card: hsl(228, 28%, 20%);
  --dark-text1: hsl(228, 34%, 66%);
  --dark-text2: hsl(0, 0%, 100%);
  --light-bg: hsl(0, 0%, 100%);
  --light-top: hsl(225, 100%, 98%);
  --light-card: hsl(227, 47%, 96%);
  --light-text1: hsl(228, 12%, 44%);
  --light-text2: hsl(230, 17%, 14%);
  --dark-card-hover:hsl(228,25%,27%);
  --background:var(--dark-bg);
  --text-color:var(--light-text2);
}

@media (prefers-color-scheme: dark) {
  :root {
    --background:var(--dark-bg);
    --text-color:var(--dark-text2);
  }
}
/* ## Typography

### Body Copy

- Font size (Overview Card Headings): 14px

### Font

- Family: [Inter](https://fonts.google.com/specimen/Inter)
- Weights: 400, 700
 */
:root {
  --font-inter: "Inter", sans-serif;
}

/*   body{
    font-family: var(--font-inter);
  } */
html {
  font-size: 100%;
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

body {
  margin: 0;
  padding: 0;
  font-family: var(--font-inter);
  background: var(--dark-bg);
  color: var(--dark-text2);
}

/* @mixin is like a function we created a mixin named breakpoint just like a function it also has parameters we created a 
parameter to the mixin called $size. @mixin genrally loads reusable code you wanna use again we create it with keyword @mixin
when inside mixin is the code you dont wanna type in everytime. inside mixin we created a media query min width so it runs when 
the width reaches the specified min width and to get the min width from the specified breakpoints above the mixin we used a method
called map-get so it gets the specified min width,the first parameter in this method is breakpoints-up so it takes the min width 
values from breakpoints-up which we have specifies above and the second parameter is size which takes the size from breakpoints-up and stores 
it as min-width the size indicates small,large,xlarge and its value. @content is the content you wanna run when the webpage reaches the psecified size */
/* h1{
    @include breakpoint(large){
        font-size: 3rem;
    }
}//so when the size of page reaches the min-width large i.e, 64em h1's font size becomes 3rem
//example of how the above code would look like if it was in normal css
@media(min-width:64em){
    h1{
        font-size: 3rem;
    }
} */
/* h1{
    font-size: rem(32);//we have given input as 32 pixels which is 2 rems
}
//what it is going to look like in normal css
h1{
    font-size: 2rem;
} */
h1,
h2,
h3 {
  margin-top: 0;
  line-height: 1.1;
}

h1 {
  font-size: 1.5rem;
  margin-bottom: 0.1875rem;
}
@media (min-width: 71.875em) {
  h1 {
    font-size: 1.75rem;
  }
}

h2 {
  font-size: 1.5rem;
  margin-bottom: 1.5rem;
}

a,
a:visited,
a:active {
  text-decoration: none;
}

.container {
  padding: 0 1.5625rem;
  max-width: 69.375rem;
  margin: 0 auto 2.875rem;
}
@media (min-width: 71.875em) {
  .container {
    padding: 0;
  }
}

.header {
  display: flex;
  flex-wrap: wrap;
  margin-top: 2.25rem;
}
@media (min-width: 40em) {
  .header {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
}
.header__title {
  width: 100%;
}
@media (min-width: 40em) {
  .header__title {
    width: auto;
  }
}
.header__subtitle {
  font-size: 0.875rem;
  font-weight: 700;
  color: var(--dark-text1);
}

.toggle {
  display: grid;
  grid-template-columns: 1fr 3rem;
  border: none;
  gap: 0.3rem 0.5rem;
  margin: 0;
}
.toggle label {
  font-size: 0.875rem;
  cursor: pointer;
}
.toggle label[for=dark] {
  line-height: 1.5rem;
  margin-right: 0.3125rem;
}
.toggle__wrapper {
  height: 1.5rem;
  position: relative;
  display: flex;
}
.toggle input[type=radio] {
  opacity: 0;
  margin: 0 2px 0px 2px;
  top: 0;
  width: 1.25rem;
  height: 1.5rem;
  position: relative;
  z-index: 2;
  cursor: pointer;
}
.toggle input[type=radio]:focus ~ .toggle__button {
  border: 2px solid white;
}
.toggle__background {
  display: block;
  height: 100%;
  position: absolute;
  width: 100%;
  top: 0;
  border-radius: 0.75rem;
  background: linear-gradient(225deg, var(--toggle-bg-end) 0%, var(--toggle-bg-start) 98.02%);
  z-index: 0;
}
.toggle__button {
  position: absolute;
  left: 0.1875rem;
  top: 0.1875rem;
  width: 1.125rem;
  height: 1.125rem;
  border-radius: 50%;
  background-color: var(--dark-bg);
  transition: left 0.3 ease;
  z-index: 1;
}
.toggle #dark:checked ~ .toggle__button {
  left: 0.1875rem;
  right: auto;
}
.toggle #system:checked ~ .toggle__button {
  left: 50%;
  right: 50%;
  transform: translateX(-50%);
}
.toggle #light:checked ~ .toggle__button {
  left: auto;
  right: 0.1875rem;
}

.cards {
  display: grid;
  grid-template-columns: 1fr;
  gap: 1.875rem;
}
@media (min-width: 40em) {
  .cards {
    grid-template-columns: repeat(2, 1fr);
  }
}
@media (min-width: 71.875em) {
  .cards {
    grid-template-columns: repeat(4, 1fr);
  }
}

.card {
  background: var(--dark-card);
  color: var(--dark-text1);
  padding: 1.5625rem;
  text-align: center;
  border-radius: 0.3125rem;
  flex: 1;
  flex-wrap: wrap;
  position: relative;
  transition: background 150ms ease-in-out;
}
.card:hover {
  background: var(--dark-card-hover);
  cursor: pointer;
}
.card--facebook {
  border-top: 0.3125rem solid var(--facebook);
}
.card--twitter {
  border-top: 0.3125rem solid var(--twitter);
}
.card--instagram {
  padding-top: 1.875rem;
}
.card--instagram::before {
  content: "";
  height: 0.3125rem;
  width: 100%;
  background: linear-gradient(to right, var(--instagram-start), var(--instagram-end));
  position: absolute;
  top: 0;
  left: 0;
  overflow: hidden;
  border-radius: 0.3125rem 0.3125rem 0 0;
}
.card--youtube {
  border-top: 0.3125rem solid var(--youTube);
}
.card__icon {
  margin-right: 0.5rem;
}
.card__platform {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-bottom: 1.75rem;
  height: 1.25rem;
}
.card__username {
  font-size: 0.75rem;
  font-weight: 700;
}
.card__count {
  color: var(--light-bg);
  font-weight: 700;
  letter-spacing: -0.0625rem;
  line-height: 1;
  margin-bottom: 0.25rem;
}
.card__count--big {
  font-size: 3.5rem;
}
.card__count--small {
  font-size: 2rem;
}
.card__followers {
  margin-bottom: 1.5625rem;
}
.card__label {
  color: var(--dark-text1);
  font-size: 0.75rem;
  font-weight: 400;
  text-transform: uppercase;
  letter-spacing: 0.3125rem;
}
.card__change {
  font-size: 0.75rem;
  font-weight: 700;
  display: flex;
  justify-content: center;
  align-items: center;
}
.card__change--up {
  color: var(--limegreen);
}
.card__change--down {
  color: var(--brightred);
}
.card__change img {
  margin-right: 0.25rem;
}
.card__subtitle {
  font-size: 0.875rem;
  font-weight: 700;
}

.card-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(2, auto);
  justify-items: start;
  gap: 1.4375rem;
}
.card-grid .card__count {
  margin-bottom: 0;
}
.card-grid .card__count, .card-grid .card__change {
  align-self: end;
}
.card-grid img, .card-grid .card__change {
  justify-self: end;
}/*# sourceMappingURL=style.css.map */